#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

#####################################################################
#   PRINT START
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)
## Beacon Contact logic (if you have one. 4 lines at 4 locations)

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  SET_FAN_SPEED FAN=Octopus_Fan SPEED=1.0               #Turn on Fan for Octopus Pro
  M117                                                  #Clears the LCD Message
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  Chamber_LEDS_White                                    # Sets LED's to homing-mode
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  SET_GCODE_OFFSET Z=0                                  # Set offset to 0

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                        # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    Chamber_Heating_Bed                                 # Set Chamber Lights to Heating
    M106 S255                                           # Turn on the PT-fan

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    Chamber_Heating_Bed                                 # Set Chamber Lights to Heating
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                       # Display info on display
  STATUS_LEVELING                                       # Set LEDs to leveling-mode
  Chamber_QGL                                           # Set Chamber Lights to QGL
  QUAD_GANTRY_LEVEL                                     # Level the printer via QGL
  G28 Z                                                 # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                       # Display info on display
  STATUS_MESHING                                        # Set LEDs to bed mesh-mode
  Chamber_Bed_Mesh                                      # Set Chamber Lights to Bed Mesh
  BED_MESH_CALIBRATE                                    # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh
  CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle

  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1   #Turn On the Filament Sensor

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  Chamber_Heating_Hotend                                # Set Chamber Lights to Heating Hotend
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  Chamber_LED_White                                     # Set Chamber Lights to White
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position

  #If using the BIQU Cold Plate, then raise Offset
  {% if curr_bed_type=="Cool Plate" %}
    SET_GCODE_OFFSET Z=+0.02
  {% else %}
    SET_GCODE_OFFSET Z=0.0
  {% endif %}

#####################################################################
#   Print End
#####################################################################

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    #Turn Off Filament Sensor
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M117 Print Finished!
    Chamber_Print_Finished
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    G1 Z30 F1200 #Move Z up just a little
    BED_MESH_CLEAR
    SET_FAN_SPEED FAN=Octopus_Fan SPEED=0 #Turn off Fan for Octopus Pro
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#####################################################################
#   Print Pause
#####################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
        Chamber_Print_Paused
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


#####################################################################
#   Print Resume
#####################################################################

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        Chamber_LED_White
        BASE_RESUME                                                                  ; resume print
    {% endif %}


####################################################################
#   Print Cancel
#####################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    Chamber_LED_Standby #Set Chamber LED's to Standby Preset
    BASE_CANCEL_PRINT
    
####################################################################
#   Preheat to 110 Macro
#####################################################################

[gcode_macro PREHEAT_110]
gcode:
    SET_DISPLAY_TEXT MSG="Heatbed 110c" 
    Chamber_Heating_Bed #Set Chamber LED's to Heating Bed Preset
    STATUS_HEATING #Set LED Toolheads to Heating Preset
    M190 S110
    Chamber_LED_Standby #Set Chamber LED's to Standby Preset
    STATUS_READY #Set LED Toolheads to Ready Preset

####################################################################
#   Turn Off Filament Sensors
#####################################################################

[gcode_macro TURN_OFF_FILAMENT_SENSORS]
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

####################################################################
#   M600
#####################################################################

[gcode_macro M600]
gcode:
    SET_DISPLAY_TEXT MSG="Change Colour" 
    PAUSE                ; Pause
    Chamber_Print_Paused #Set Chamber LED's to Pause Preset

#####################################################################
#   UNSAFE LOWER BED
#####################################################################

[gcode_macro UNSAFE_LOWER_BED]
description: Lower the bed 100mm without homing
gcode:
  G90
  Chamber_Print_Issue #Set Chamber LED's to Print Issue Preset
  SET_KINEMATIC_POSITION Z=100
  G0 Z0 F600
  M84
  Chamber_LED_Standby #Set Chamber LED's to Standby Preset

#####################################################################
#   UNSAFE RAISE BED
#####################################################################

[gcode_macro UNSAFE_RAISE_BED]
description: Raise the bed 100mm without homing
gcode:
  G90
  Chamber_Print_Issue #Set Chamber LED's to Print Issue Preset
  SET_KINEMATIC_POSITION Z=0
  G0 Z100 F600
  M84
  Chamber_LED_Standby #Set Chamber LED's to Standby Preset

#####################################################################
#   LOAD & UNLOAD FILAMENT
#####################################################################

[gcode_macro LOAD_FILAMENT]
variable_ignore_min_extrude_temp: True
gcode:
  M117 Loading
  Chamber_LED_White #Set Chamber LED's to Full White Preset
  status_heating
  M104 S200
  G90 ; Absolute pos
  G1 X100 Y20 Z20 F1800 ; Move to center
  M104 S200 ;Heat up the filament
  TEMPERATURE_WAIT SENSOR={printer.toolhead.extruder} MINIMUM=200
  M83                            ; set extruder to relative
  G1 E50 F300                   ; extrude 5 cm
  G1 E50 F300                   ; extrude 5 cm
  G1 E-4 F1800                  ; retract some
  M82                           ; set extruder to absolute
  M400                          ; wait for buffer to clear
  M104 S0                       ; Stop heating
  M117 Loading done
  status_ready
  Chamber_LED_Standby #Set Chamber LED's to Standby Preset

[gcode_macro UNLOAD_FILAMENT]
variable_ignore_min_extrude_temp: True
gcode:
  M117 Unloading
  Chamber_LED_White #Set Chamber LED's to Full White Preset
  status_heating
  M104 S200 ;Heat up the filament
  TEMPERATURE_WAIT SENSOR={printer.toolhead.extruder} MINIMUM=200
  M83                           ; set extruder to relative
  G1 E5 F500                   ; extrude 5 mm
  G1 E-50 F1000                   ; retract 5 cm
  G1 E-50 F1000                   ; retract 5 cm
  M82                            ; set extruder to absolute
  M400                          ; wait for buffer to clear
  M104 S0                       ; Stop heating
  M117 Unloading done
  status_ready
  Chamber_LED_White #Set Chamber LED's to Full White Preset

####################################################################
#   Delayed Macro Disable Filament Sensor
#####################################################################

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

#####################################################################
#   Klipper Backup Macro
#####################################################################

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True